
    -
      name: "Set the application folder"
      set_fact:
        appfolder: "{{appfolderMap[app]}}"

    -
      name: "{{app}}@{{inventory_hostname}} - Stopping application"
      become: true
      service:
        name="{{app}}"
        state=stopped
        enabled=yes
      ignore_errors: true

    -
      name: "{{app}}@{{inventory_hostname}} - Making sure base directory {{app_basedir}} exists"
      become: true
      file:
        path={{app_basedir}}
        state=directory
        owner=miles2

    -
      name: "{{app}}@{{inventory_hostname}} - Making sure directory {{app_basedir}}/{{app}} exists"
      become: true
      file:
        path={{app_basedir}}/{{app}}
        state=directory
        owner=miles2

    -
      name: "{{app}}@{{inventory_hostname}} - Making sure directory {{app_basedir}}/{{app}}/current exists"
      become: true
      file:
        path={{app_basedir}}/{{app}}/current
        state=directory
        owner=miles2
    -
      name: "{{app}}@{{inventory_hostname}} - Making sure directory {{app_basedir}}/{{app}}/previous exists"
      become: true
      file:
        path={{app_basedir}}/{{app}}/previous
        state=directory
        owner=miles2
    -
      name: "{{app}}@{{inventory_hostname}} - Making sure directory /var/log/invoicemanager/{{app}}/ exists"
      become: true
      file:
        path=/var/log/invoicemanager/{{app}}/
        state=directory
        owner=miles2

    -
      name: "{{app}}@{{inventory_hostname}} - Copying existing files to {{app_basedir}}/{{app}}/previous"
      command: "cp -a {{app_basedir}}/{{app}}/current/. {{app_basedir}}/{{app}}/previous/"

    -
      name: "{{app}}@{{inventory_hostname}} - Copying new binaries"
      copy:
        src="../{{appfolder}}/target/{{app}}.jar"
        dest="{{app_basedir}}/{{app}}/current/"
        mode=0700
      when: app != 'im-pdfgenerator'

    -
      name: "{{app}}@{{inventory_hostname}} - Copying zip binaries"
      copy:
        src="../{{appfolder}}/target/{{app}}.zip"
        dest="{{app_basedir}}/{{app}}/current/"
        mode=0700
      when: app == 'im-pdfgenerator'

    -
      name: "{{app}}@{{inventory_hostname}} - unzip files"
      unarchive:
          src: "{{app_basedir}}/{{app}}/current/{{app}}.zip"
          dest: "{{app_basedir}}/{{app}}/current/"
          remote_src: yes
          mode: 0700
      when: app == 'im-pdfgenerator'

    -
      name: "{{app}}@{{inventory_hostname}} - Copying config"
      template:
        src=templates/{{app}}/{{line_item}}
        dest={{app_basedir}}/{{app}}/current/{{line_item}}
        owner=miles2
      with_items:
        - application.yml
      loop_control:
        loop_var: line_item

    -
      name: "{{app}}@{{inventory_hostname}} - Copying obsidian properties"
      template:
        src=templates/{{app}}/com.carfey.properties
        dest={{app_basedir}}/{{app}}/current/
        owner=miles2
      when: app == "im-preprocessor" 


    -
      name: "{{app}}@{{inventory_hostname}} - Copying JVM config"
      template:
        src=templates//{{app}}/jvmconfig.conf
        dest="{{app_basedir}}/{{app}}/current/{{app}}.conf"
        owner=miles2

    -
      name: "{{app}}@{{inventory_hostname}} - Creating symlink for service"
      become: true
      file:
        src="{{app_basedir}}/{{app}}/current/{{app}}.jar"
        dest="/etc/init.d/{{app}}"
        state=link
      when: app == "im-pdfgenerator"

    -
      name: "{{app}}@{{inventory_hostname}} - Starting application"
      become: true
      service:
        name="{{app}}"
        state=started
        enabled=yes
      when: app == "im-pdfgenerator"